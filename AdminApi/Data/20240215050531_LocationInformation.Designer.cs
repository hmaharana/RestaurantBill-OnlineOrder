// <auto-generated />
using System;
using AdminApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminApi.Data
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240215050531_LocationInformation")]
    partial class LocationInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminApi.Models.App.Category.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 91, DateTimeKind.Local).AddTicks(7944));

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.HasIndex("Parent");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AdminApi.Models.App.Filter", b =>
                {
                    b.Property<int>("FilterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 100, DateTimeKind.Local).AddTicks(5869));

                    b.Property<string>("FilterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FilterId");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("AdminApi.Models.App.FilterSetting", b =>
                {
                    b.Property<int>("FilterSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 101, DateTimeKind.Local).AddTicks(6476));

                    b.Property<int>("FilterId")
                        .HasColumnType("int");

                    b.Property<int>("FilterValueId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FilterSettingId");

                    b.ToTable("FilterSettings");
                });

            modelBuilder.Entity("AdminApi.Models.App.FilterValues", b =>
                {
                    b.Property<int>("FilterValuesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 101, DateTimeKind.Local).AddTicks(1607));

                    b.Property<int>("FilterId")
                        .HasColumnType("int");

                    b.Property<string>("FilterValueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("FilterValuesId");

                    b.ToTable("FilterValues");
                });

            modelBuilder.Entity("AdminApi.Models.App.Item.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 102, DateTimeKind.Local).AddTicks(7349));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MRP")
                        .HasColumnType("float");

                    b.Property<double>("SalePrice")
                        .HasColumnType("float");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("float");

                    b.Property<string>("TaxType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("AdminApi.Models.App.Location_Master.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AdminApi.Models.App.Location_Master.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("AdminApi.Models.App.Location_Master.LocationInformation", b =>
                {
                    b.Property<int>("LocationInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("LocationInformationId");

                    b.ToTable("LocationInformations");
                });

            modelBuilder.Entity("AdminApi.Models.App.Location_Master.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StateId");

                    b.ToTable("States");
                });

            modelBuilder.Entity("AdminApi.Models.App.MarketUsers", b =>
                {
                    b.Property<int>("MarketUsersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 102, DateTimeKind.Local).AddTicks(2476));

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 15, 10, 35, 30, 102, DateTimeKind.Local).AddTicks(1624));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPasswordChange")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PasswordChangedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("MarketUsersId");

                    b.ToTable("MarketUsers");
                });

            modelBuilder.Entity("AdminApi.Models.Menu.AppMenu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'11', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int>("IsSubMenu")
                        .HasColumnType("int");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("MenuID");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(5695),
                            IconClass = "fas fa-home",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Dashboard",
                            ParentID = 0,
                            SortOrder = 1,
                            URL = "/DashBoard/Index"
                        },
                        new
                        {
                            MenuID = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8465),
                            IconClass = "fas fa-ellipsis-v",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            IsVisible = true,
                            MenuTitle = "Menu",
                            ParentID = 0,
                            SortOrder = 2,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8485),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Menu List",
                            ParentID = 2,
                            SortOrder = 0,
                            URL = "/Menu/MenuList"
                        },
                        new
                        {
                            MenuID = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8490),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Menu Group List",
                            ParentID = 2,
                            SortOrder = 0,
                            URL = "/Menu/MenuGroupList"
                        },
                        new
                        {
                            MenuID = 5,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8493),
                            IconClass = "fas fa-user",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            IsVisible = true,
                            MenuTitle = "User",
                            ParentID = 0,
                            SortOrder = 3,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 6,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8497),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "User List",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/UserList"
                        },
                        new
                        {
                            MenuID = 7,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8501),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Role List",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/RoleList"
                        },
                        new
                        {
                            MenuID = 8,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8504),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Profile",
                            ParentID = 5,
                            SortOrder = 0,
                            URL = "/User/UserProfile"
                        },
                        new
                        {
                            MenuID = 9,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8508),
                            IconClass = "fas fa-wrench",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 1,
                            IsVisible = true,
                            MenuTitle = "Settings",
                            ParentID = 0,
                            SortOrder = 4,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 10,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 19, DateTimeKind.Local).AddTicks(8512),
                            IconClass = "",
                            IsActive = true,
                            IsMigrationData = true,
                            IsSubMenu = 0,
                            IsVisible = true,
                            MenuTitle = "Change Password",
                            ParentID = 9,
                            SortOrder = 0,
                            URL = "/User/ChangePassword"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.Menu.MenuGroup", b =>
                {
                    b.Property<int>("MenuGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("MenuGroupID");

                    b.ToTable("MenuGroup");

                    b.HasData(
                        new
                        {
                            MenuGroupID = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 6, DateTimeKind.Local).AddTicks(8679),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Super Admin Group"
                        },
                        new
                        {
                            MenuGroupID = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 9, DateTimeKind.Local).AddTicks(6152),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "User Group"
                        },
                        new
                        {
                            MenuGroupID = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 9, DateTimeKind.Local).AddTicks(6192),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Franchise Group"
                        },
                        new
                        {
                            MenuGroupID = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 9, DateTimeKind.Local).AddTicks(6199),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupName = "Partner Group"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.Menu.MenuGroupWiseMenuMapping", b =>
                {
                    b.Property<int>("MenuGroupWiseMenuMappingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'11', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("MenuGroupWiseMenuMappingId");

                    b.ToTable("MenuGroupWiseMenuMapping");

                    b.HasData(
                        new
                        {
                            MenuGroupWiseMenuMappingId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(3604),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 1
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5606),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 3
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5620),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 4
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5624),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 6
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 5,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5628),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 7
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 6,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5631),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 8
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 7,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5634),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            MenuId = 10
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 8,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5637),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 1
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 9,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5640),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 8
                        },
                        new
                        {
                            MenuGroupWiseMenuMappingId = 10,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 22, DateTimeKind.Local).AddTicks(5643),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            MenuId = 10
                        });
                });

            modelBuilder.Entity("AdminApi.Models.User.LogHistory", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LogCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.ToTable("LogHistory");
                });

            modelBuilder.Entity("AdminApi.Models.User.MarketUserLogHistory", b =>
                {
                    b.Property<long>("MarketUserLogHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LogInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MarketUserId")
                        .HasColumnType("int");

                    b.Property<string>("MarketuserLogCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarketUserLogHistoryId");

                    b.ToTable("MarketUserLogHistory");
                });

            modelBuilder.Entity("AdminApi.Models.User.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MenuGroupId")
                        .HasColumnType("int");

                    b.Property<string>("RoleDesc")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 13, DateTimeKind.Local).AddTicks(7372),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            UserRoleId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 13, DateTimeKind.Local).AddTicks(9379),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 2,
                            RoleName = "User"
                        },
                        new
                        {
                            UserRoleId = 3,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 13, DateTimeKind.Local).AddTicks(9397),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 3,
                            RoleName = "Franchise"
                        },
                        new
                        {
                            UserRoleId = 4,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 13, DateTimeKind.Local).AddTicks(9401),
                            IsActive = true,
                            IsMigrationData = true,
                            MenuGroupId = 4,
                            RoleName = "Provider"
                        });
                });

            modelBuilder.Entity("AdminApi.Models.User.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'3', '1', '', '', 'False', '1'")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMigrationData")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordChange")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastPasswordChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("PasswordChangedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserReferralId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 15, DateTimeKind.Local).AddTicks(9417),
                            FullName = "Admin",
                            IsActive = true,
                            IsMigrationData = true,
                            IsPasswordChange = false,
                            Password = "admin@2024",
                            UserName = "Developer",
                            UserRoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            AddedBy = 1,
                            DateAdded = new DateTime(2024, 2, 15, 10, 35, 30, 16, DateTimeKind.Local).AddTicks(1467),
                            FullName = "Helen Smith",
                            IsActive = true,
                            IsMigrationData = true,
                            IsPasswordChange = false,
                            Password = "user@2020",
                            UserName = "user@2020",
                            UserRoleId = 2
                        });
                });

            modelBuilder.Entity("AdminApi.Models.App.Category.Category", b =>
                {
                    b.HasOne("AdminApi.Models.App.Category.Category", null)
                        .WithMany("Children")
                        .HasForeignKey("Parent");
                });
#pragma warning restore 612, 618
        }
    }
}
