@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Filter Value";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-pie-chart mr-1"></i>Product Master</a></li>
        <li class="breadcrumb-item active" aria-current="page">Filter Value</li>
    </ol>
    <div class="ml-auto">
        <a href="#" onclick="showAddBtn()" data-toggle="modal" data-target="#filtervalueModal" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> Add New
        </a>

    </div>
</div>


<div class="col-md-12 col-lg-12">
    <div class="card">
        <div class="card-header">
            <div class="card-title">Filter Value</div>
        </div>
        <div class="card-body">
            <div class="table-responsive">

                <table id="filtervalueTable" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                    <thead>
                        <tr>

                            <th>Filter Name</th>
                            <th>Filter Value Name</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>

            </div>
        </div>
    </div>
</div>






<div id="filtervalueModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">

            </div>
            <div class="modal-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label">Filter</label>
                                        <select id="filter" class="custom-select" required></select>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label">Filter Name</label>
                                        <input type="text" class="form-control" autocomplete="off" id="filtervaluename" placeholder="Filter Value Name" required />
                                    </div>
                                </div>



                            </div>

                            <div class="row">
                                <div class="col-lg-6">
                                    <button type="button" id="btnSave" class="btn btn-primary" style="display:none">Save</button>
                                    <button type="button" id="btnUpdate" class="btn btn-primary" style="display:none">Update</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>



@section scripts{
    <script>
        var filterValueId;
        
        $(function () {
            loadFilterValue();

            $('#filtervalueTable tbody').on('click', 'button[data-target="#filtervalueModal"]', function () {
                var id = $(this).data('id');
                loadSingleFilterValue(id);
                $('#btnUpdate').show();
                $('#btnSave').hide();
                filterValueId = id;
            });

            $('#filtervalueTable tbody').on('click', 'button[data-target="#delete"]', function () {
                var id = $(this).data('id');


                swal({
                    html: true,
                    title: "Are you sure?",
                    text: "You will not be able to recover this data!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, confirm it!",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        type: "GET",
                        url: "@apiUrl/api/FilterValue/DeleteFilterValue/" +id+"/"+@Context.Session.GetInt32("UserId"),

                        contentType: "application/json; charset=utf-8",
                        headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                        },
                        dataType: "json",
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 200) {
                                $('#filtervalueTable').DataTable().ajax.reload(null, false);
                                sweetAlert({
                                    html: true,
                                    title: "Filter Value",
                                    text: "Successfully deleted!",
                                    type: "success"
                                });
                            }else if (xhr.status == 202) {
                                sweetAlert("Validation Alert!", data.responseMsg, "warning");
                            } else {
                                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                            }
                        },
                        error: function (data) {
                            if (data.status == 401) {
                                window.location.replace('/Message/TokenExpire');
                            } else if (data.status == 403) {
                                window.location.replace('/Message/Unauthorize');
                            }
                        }
                    });
                });
            });

            $("#btnSave").click(function (e) {
                if (!document.getElementById("formPost").checkValidity()) {
                    e.preventDefault();
                } else {
                        var model = {
                            filterValueName: $.trim($("#filtervaluename").val()),
                            filterId: parseInt($("#filter").val()),
                            createdBy:@Context.Session.GetInt32("UserId"),
                        }
                    //console.log(model);

                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/FilterValue/CreateFilterValues",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status === 200) {
                            $('#filtervalueTable').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Filter Value",
                                text: "Successfully created!",
                                type: "success"
                                });
                        } else if (data.status === "duplicate") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else if (data.status === "error") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        }else {
                                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                            }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                    });
                }
            });

            $("#btnUpdate").click (function (e) {
                if (!document.getElementById("formPost").checkValidity()) {
                    e.preventDefault();
                } else {

                    var model = {
                        filterValuesId: filterValueId,
                            filterValueName: $.trim($("#filtervaluename").val()),
                            filterId: parseInt($("#filter").val()),
                            createdBy:@Context.Session.GetInt32("UserId"),
                        }
                       
                    $.ajax({
                        type: "POST",
                        url: "@apiUrl/api/FilterValue/UpdateFilterValue",
                        data: JSON.stringify(model),
                        contentType: "application/json; charset=utf-8",
                        headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                        },
                        dataType: "json",
                        success: function (data, statusText, xhr) {
                            //console.log(xhr.status);
                            //console.log(statusText);
                            if (xhr.status==200) {
                                $('#filtervalueTable').DataTable().ajax.reload(null, false);
                                    sweetAlert({
                                        html: true,
                                        title: "Filter Value",
                                        text: "Successfully updated!",
                                        type: "success"
                                    });
                            } else if (xhr.status == 202) {
                                sweetAlert("Validation Alert!", data.responseMsg, "warning");
                            } else {
                                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                            }
                        },
                        error: function (data) {
                            if (data.status == 401) {
                                window.location.replace('/Message/TokenExpire');
                            } else if (data.status == 403) {
                                window.location.replace('/Message/Unauthorize');
                            } else if (data.status == 400) {
                                sweetAlert("Validation Alert!", "Please check input data!", "warning");
                            }
                        }
                    });
                }
            });

        });

        function loadSingleFilterValue(id) {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/FilterValue/GetSingleFilterValue/" + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                success: function (data, statusText, xhr) {
                    console.log(xhr.status);
                    if (xhr.status == 200) {
                        $('#filtervaluename').val(data.filterValueName);
                        filterList(data.filterId);

                    }
                    else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    console.log(data.status);
                    if (data.status == 401) {
                        console.log('un-authorized/token expired');
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        console.log('forbidden/no permission');
                        window.location.replace('/Message/Unauthorize');
                    }

                }
            });
        }

        function loadFilterValue() {
            var table = $('#filtervalueTable').DataTable();
            table.destroy();

            table = $('#filtervalueTable').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['copy', 'csv', 'excel', 'pdf', 'print'],
                "searching": true,
                "paging": true,
                "sort": true,
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/FilterValue/GetFilterValueList',
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                    { "data": "filterName", "orderable": true },
                    { "data": "filterValueName", "orderable": true },

                    
                    {
                        "orderable": false,
                        "class": "action_button",
                        "render": function (data, type, row) {
                            var id = row.filterValuesId;
                            var actionButtonsHtml = "";
                            actionButtonsHtml += generateActionButtonForList(id, 'filtervalueModal');
                            return actionButtonsHtml;
                        }
                    }
                ]
            });
        }




        function showAddBtn() {
            filterList('');
            $('#btnSave').show();
            $('#btnUpdate').hide();

            resetInput('#filtervalueModal');
        }






        function filterList(id) {
            var opt = '';
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Filter/GetFilterList",
                contentType: "application/json; charset=utf-8",
                headers: {
                   "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                dataType: "json",
                success: function (res) {

                    var options = [];
                    options.push('<option value="">Select Filter Value</option>');
                    for (var i = 0; i < res.data.length; i++) {
                        if (id == res.data[i].filterId) {
                            opt = 'selected'
                        } else {
                            opt = '';
                        }
                        options.push('<option value="' + res.data[i].filterId + '" ' + opt + '>' + res.data[i].filterName+ '</option>');
                    }
                    $("#filter").html(options.join(''));
                },
                error: function (data) {
                    if (data.status == 401) {
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        window.location.replace('/Message/Unauthorize');
                    }
                }
            });
        }

    </script>
}