@using Microsoft.Extensions.Configuration;
@using Microsoft.AspNetCore.Http
@inject IConfiguration Configuration;

@{
    ViewBag.Title = "Filter";
    string apiUrl = Configuration.GetValue<string>("WebAPIBaseUrl");
}

<div class="page-header">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="fe fe-pie-chart mr-1"></i>Product Master</a></li>
        <li class="breadcrumb-item active" aria-current="page">Filter</li>
    </ol>
    <div class="ml-auto">
        <a href="#" onclick="showAddBtn()" data-toggle="modal" data-target="#filterModal" class="btn btn-primary btn-icon btn-sm text-white mr-2">
            <span>
                <i class="fe fe-plus"></i>
            </span> Add New
        </a>
    </div>
</div>


<div class="col-md-12 col-lg-12">
    <div class="card">
        <div class="card-header">
            <div class="card-title">Filter</div>
        </div>
        <div class="card-body">
            <div class="table-responsive">

                <table id="filterTable" class="table table-striped table-bordered nowrap dataTable no-footer dtr-inline" style="width:100%">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Name</th>
                            <th hidden>Alias</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="filterModal" class="modal fade" role="dialog">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header"></div>
            <div class="modal-body">
                <form action="#" role="form" class="validate" id="formPost">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label class="control-label">Filter Name</label>
                                        <input type="text" class="form-control" autocomplete="off" id="filtername" placeholder="Filter Name" required />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-lg-6">
                                    <button type="button" id="btnSave" class="btn btn-primary" style="display:none">Save</button>
                                    <button type="button" id="btnUpdate" class="btn btn-primary" style="display:none">Update</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>



@section scripts{
    <script>
        var filterId;

        $(function () {
            loadFiltrer();

            $('#filterTable tbody').on('click', 'button[data-target="#filterModal"]', function () {
                var id = $(this).data('id');
                loadSingleFilter(id);
                $('#btnUpdate').show();
                $('#btnSave').hide();
                filterId = id;
            });

            $('#filterTable tbody').on('click', 'button[data-target="#delete"]', function () {
                var id = $(this).data('id');

               
                swal({
                    html: true,
                    title: "Are you sure?",
                    text: "You will not be able to recover this data!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, confirm it!",
                    closeOnConfirm: false
                }, function () {
                    $.ajax({
                        type: "GET",
                        url: "@apiUrl/api/Filter/DeleteFilter/"+id+"/"+@Context.Session.GetInt32("UserId"),
                        
                        contentType: "application/json; charset=utf-8",
                        headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                        },
                        dataType: "json",
                        success: function (data, statusText, xhr) {
                            if (xhr.status == 200) {
                                $('#filterTable').DataTable().ajax.reload(null, false);
                                sweetAlert({
                                    html: true,
                                    title: "Filter",
                                    text: "Successfully deleted!",
                                    type: "success"
                                });
                            }else if (xhr.status == 202) {
                                sweetAlert("Validation Alert!", data.responseMsg, "warning");
                            } else {
                                sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                            }
                        },
                        error: function (data) {
                            if (data.status == 401) {
                                window.location.replace('/Message/TokenExpire');
                            } else if (data.status == 403) {
                                window.location.replace('/Message/Unauthorize');
                            }
                        }
                    });
                });
            });

            $("#btnSave").click(function (e) {
                if (!document.getElementById("formPost").checkValidity()) {
                    e.preventDefault();
                } else {
                        var model = {
                            filterName: $.trim($("#filtername").val()),
                           // alias: $.trim($("#filterAlias").val()),
                            createdBy:@Context.Session.GetInt32("UserId"),
                        }
                    //console.log(model);

                $.ajax({
                    type: "POST",
                    url: "@apiUrl/api/Filter/CreateFilter",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    headers: {
                            "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    dataType: "json",
                    success: function (data, statusText, xhr) {
                        if (xhr.status === 200) {
                            $('#filterTable').DataTable().ajax.reload(null, false);
                            sweetAlert({
                                html: true,
                                title: "Filter",
                                text: "Successfully created!",
                                type: "success"
                                });
                        } else if (data.status === "Duplicate") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        } else if (data.status === "error") {
                            sweetAlert("Validation Alert!", data.responseMsg, "warning");
                        }else {
                                sweetAlert("Validation Alert!", "Something Unexpected..!", "warning");
                            }
                    },
                    error: function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        } else if (data.status == 400) {
                            sweetAlert("Validation Alert!", "Please check input data!", "warning");
                        }
                    }
                    });
                }
            });

             $("#btnUpdate").click (function (e) {
                 if (!document.getElementById("formPost").checkValidity()) {
                     e.preventDefault();
                 } else {
                     var model = {
                             filterId: filterId,
                             filterName: $.trim($("#filtername").val()),
                             //alias: $.trim($("#filterAlias").val()),
                             createdBy:@Context.Session.GetInt32("UserId"),
                     }
                     $.ajax({
                         type: "POST",
                         url: "@apiUrl/api/Filter/UpdateFilter",
                         data: JSON.stringify(model),
                         contentType: "application/json; charset=utf-8",
                         headers: {
                             "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                         },
                         dataType: "json",
                         success: function (data, statusText, xhr) {
                             //console.log(xhr.status);
                             //console.log(statusText);
                             if (xhr.status==200) {
                                 $('#filterTable').DataTable().ajax.reload(null, false);
                                     sweetAlert({
                                         html: true,
                                         title: "Filter",
                                         text: "Successfully updated!",
                                         type: "success"
                                     });
                             } else if (xhr.status == 202) {
                                 sweetAlert("Validation Alert!", data.responseMsg, "warning");
                             } else {
                                 sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                             }
                         },
                         error: function (data) {
                             if (data.status == 401) {
                                 window.location.replace('/Message/TokenExpire');
                             } else if (data.status == 403) {
                                 window.location.replace('/Message/Unauthorize');
                             } else if (data.status == 400) {
                                 sweetAlert("Validation Alert!", "Please check input data!", "warning");
                             }
                         }
                     });
                 }
             });

        });

        function loadSingleFilter(id) {
            $.ajax({
                type: "GET",
                url: "@apiUrl/api/Filter/GetSingleFilter/" + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: {
                    "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                },
                success: function (data, statusText, xhr) {
                    console.log(xhr.status);
                    if (xhr.status == 200) {
                        $('#filtername').val(data.filterName);
                        //$('#filterAlias').val(data.alias);

                    }
                    else {
                        sweetAlert("Validation Alert!", "Something unexpected!", "warning");
                    }
                },
                error: function (data) {
                    console.log(data.status);
                    if (data.status == 401) {
                        console.log('un-authorized/token expired');
                        window.location.replace('/Message/TokenExpire');
                    } else if (data.status == 403) {
                        console.log('forbidden/no permission');
                        window.location.replace('/Message/Unauthorize');
                    }

                }
            });
        }

        function loadFiltrer() {
            var table = $('#filterTable').DataTable();
            table.destroy();

            table = $('#filterTable').dataTable({
                "paginationType": "full_numbers",
                "dom": 'Bfrtip',
                "buttons": ['copy', 'csv', 'excel', 'pdf', 'print'],
                "searching": true,
                "paging": true,
                "sort": true, 
                "info": true,
                "ajax": {
                    "url": '@apiUrl/api/Filter/GetFilterList',
                    "type": "GET",
                    "dataType": "json",
                    "headers": {
                        "authorization": "Bearer @Context.Session.GetString("TokenTxt")"
                    },
                    "error": function (data) {
                        if (data.status == 401) {
                            window.location.replace('/Message/TokenExpire');
                        } else if (data.status == 403) {
                            window.location.replace('/Message/Unauthorize');
                        }
                    }
                },
                "order": [],
                "columns": [
                    { "data": "filterId", "orderable": true },
                    { "data": "filterName", "orderable": true },
                  
                    {
                        "orderable": false,
                        "class": "action_button",
                        "render": function (data, type, row) {
                            var id = row.filterId;
                            var actionButtonsHtml = "";
                            actionButtonsHtml += generateActionButtonForList(id, 'filterModal');
                            return actionButtonsHtml;
                        }
                    }
                ]
            });
        }

        function showAddBtn() {

            $('#btnSave').show();
            $('#btnUpdate').hide();
            resetInput('#filterModal');
        }


    </script>
}